// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using UIKit;

namespace PullToRefress11
{
    public partial class CutiGroupTableView : UITableViewController
    {
        Dictionary<string, List<String>> countries;
        List<String> keys;
        #region Constructor
        public CutiGroupTableView(IntPtr handle) : base(handle)
        {
        }
        #endregion

        #region LyfeCicle

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            //Show countries;
            InitComponents();
        }   

        #endregion

        public override nint NumberOfSections(UITableView tableView)
        {
            return countries.Keys.Count;
        }

        public override nint RowsInSection(UITableView tableView, nint section)
        {
            return countries[keys[int.Parse(section.ToString())]].Count;
        }
        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            var cell = tableView.DequeueReusableCell("CountryCell", indexPath) as UITableViewCell;
            cell.TextLabel.Text = countries[keys[indexPath.Section]][indexPath.Row];

            return cell;
        }
        public override string TitleForHeader(UITableView tableView, nint section)
        {
            return keys[int.Parse(section.ToString())];
        }

        public override string[] SectionIndexTitles(UITableView tableView)
        {
            return keys.ToArray();

        }

        public void UpdateTable(Object sender, EventArgs e)
        {
            CitiGroupManager.SharedInstance.FetchCountries();


        }

		public void InitComponents(){


            keys = new List<string>();

            countries = CitiGroupManager.SharedInstance.GetDefaultCountries();

            foreach (var key in countries.Keys)
            {
                keys.Add(key);
            }

            UIRefreshControl refreshControl = new UIRefreshControl();
            refreshControl.ValueChanged += UpdateTable;

            TableView.RefreshControl = refreshControl;
            CitiGroupManager.SharedInstance.CountriesFetched += SharedInstance_CountriesFetched;
            CitiGroupManager.SharedInstance.CountriesFetchFalied += SharedInstance_CountriesFetchFalied;;
                                    
        }

        void SharedInstance_CountriesFetched(object sender, global::CountriesEventArgs e)
        {
            countries = e.Countries;

            keys = new List<string>(countries.Keys);
            
            foreach (var key in countries.Keys)
            {
                keys.Add(key);
            }
            keys.AddRange(countries.Keys);

            InvokeOnMainThread(() =>
            {
                TableView.ReloadData();
                TableView.RefreshControl.EndRefreshing();

            });
            


        }

        void SharedInstance_CountriesFetchFalied(object sender, global::ErrorEventArguments e)
        {

            InvokeOnMainThread(() =>
            {
            Console.WriteLine("Error");
            UIAlertController alert =  UIAlertController.Create("Error",e.Error,UIAlertControllerStyle.Alert);
            alert.AddAction(UIAlertAction.Create("Ok",UIAlertActionStyle.Default,null));


                PresentViewController(alert, true, TableView.RefreshControl.EndRefreshing);

            });


        }
    }
}
