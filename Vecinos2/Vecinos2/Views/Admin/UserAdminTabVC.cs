// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Vecinos2.Models;
using Vecinos2.Controllers;
using System.Collections.Generic;




namespace Vecinos2
{
	public partial class UserAdminTabVC : UITableViewController
	{
		UserController userController;
        List<UserModel> users;
		UserModel selectedUser;


		public UserAdminTabVC (IntPtr handle) : base (handle)
		{
			
		}


        public override void ViewDidLoad()
        {
            base.ViewDidLoad();	
            userController = new UserController();
            users = new List<UserModel>();
			
        }

		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(animated);

            userController.UsersFetched += UserController_UsersFetched;
			userController.getAllUsers();

            UIApplication.SharedApplication.StatusBarStyle = UIStatusBarStyle.LightContent;
   
		}

		public override void ViewWillDisappear(bool animated)
        {
            base.ViewWillDisappear(animated);

        }

		public override nint NumberOfSections(UITableView tableView)
		{
			return 1;
		}

		public override nint RowsInSection(UITableView tableView, nint section)
		{
			return users.Count;
		}

		public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
            var status = users[indexPath.Row].UserStatus; 

            var cell = tableView.DequeueReusableCell(UserListTableCell.Key, indexPath) as UserListTableCell;
            cell.Name = users[indexPath.Row].Name;
            cell.Phone = users[indexPath.Row].Phone;
            cell.Mail = users[indexPath.Row].Mail;
            cell.Address = users[indexPath.Row].Address;


            switch (status)
            {
                case UserModel.userStatus.Authorized:
                    cell.Status = "Autorizado";
                    cell.LabelColor = UIColor.Green;
                    break; 
                case UserModel.userStatus.Pending:
                    cell.Status = "Pendiente";
                    cell.LabelColor = UIColor.Orange;
                    break;
                case UserModel.userStatus.UnAuthorized:
                    cell.Status = "Inhabilitado";
                    cell.LabelColor = UIColor.Red;
                    break; 

                default:
                    break;
            }



            return cell; 
		}

		public override void RowSelected(UITableView tableView, NSIndexPath indexPath)
        {
 
            selectedUser = users[indexPath.Row];
            PerformSegue("UserDetailSegue", this);
                 
        }



		public override void PrepareForSegue(UIStoryboardSegue segue, NSObject sender)
        {
            base.PrepareForSegue(segue, sender);

            if (segue.Identifier == "UserDetailSegue")
            {
                var adminUser = (AdminUserVC)segue.DestinationViewController;
                if (adminUser != null)
                {
                    adminUser.setArea(this, selectedUser);

                }
            }
        }



		void UserController_UsersFetched(object sender, GetUsersEventArgs e)
		{
			users = e.ProfileImage;
			TableView.ReloadData();
           
		}

	}
}
