// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Vecinos2.Models;
using Vecinos2.Controllers;
using Vecinos2.Views;
using System.Collections.Generic;
namespace Vecinos2
{
	public partial class AreaDetailVC : UITableViewController
	{
		AreasController areasController;
		AreaModel currentArea;
		public AreasTabVC Delegate { get; set; }
		List<AreaReservationModel> areaReservations;
	
		public AreaDetailVC (IntPtr handle) : base (handle)
		{
			areaReservations = new List<AreaReservationModel>();	
		}

       
		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			BtnAddReservation.Clicked += BtnAddReservation_Clicked;
            
		}

        public override void ViewWillDisappear(bool animated)
        {
            areasController.StopAreasFirebaseListener(); 
        }

        public void setArea(AreasTabVC areasTabVC,AreaModel area)
		{
			Delegate = areasTabVC;
			currentArea = area;
            
            areasController = new AreasController();
			areasController.areaReservationFetched += AreasController_AreaReservationFetched;
			areasController.areaReservationPosted += AreasController_AreaReservationPosted;
			areasController.GetFutureReservationsForArea(currentArea.Uid);
            
            
			this.NavigationItem.Title = currentArea.Name;
		}


		public override nint NumberOfSections(UITableView tableView)
		{
			return 1;
		}
		public override nint RowsInSection(UITableView tableView, nint section)
		{
			return areaReservations.Count;
		}

		public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
			var cell = tableView.DequeueReusableCell(AreaDetailTableCell.Key, indexPath) as AreaDetailTableCell;
			cell.Date = areaReservations[indexPath.Row].reservationDate;
			cell.Holder = areaReservations[indexPath.Row].reservationHolderName;
			return cell;
		}
	


		void BtnAddReservation_Clicked(object sender, EventArgs e)
		{
			CreateDatePicker();	
		}
       
        void CreateDatePicker()
		{

			var startingTime = DateTime.Now;
			var dialog = new DatePickerDialog();
			dialog.Show("Elija la fecha que desea Apartar", "Reservar", "Cancelar", UIDatePickerMode.Date, PostReservation, startingTime,DateTime.Now.AddMonths(3),DateTime.Now); 


			//this.View.AddSubview(datePicker);
		}

        void PostReservation(DateTime date)
		{
			
			areasController.ReserveAreaForDate(currentArea.Uid, date);
            
		}

		void AreasController_AreaReservationPosted(object sender, AreasController.AreaReservationPostedEventArgs e)
		{
			if (e.insertMesssage == "Esta fecha ya esta ocupada seleccione otra fecha!")
			{
				var alertController = UIAlertController.Create("Error", e.insertMesssage, UIAlertControllerStyle.Alert);

                alertController.AddAction(UIAlertAction.Create("Elegir otra fecha", UIAlertActionStyle.Default, (obj) => CreateDatePicker()));
                alertController.AddAction(UIAlertAction.Create("Cancelar", UIAlertActionStyle.Default, null));

                InvokeOnMainThread(() => PresentViewController(alertController, true, null));

			}
		}

   

		void AreasController_AreaReservationFetched(object sender, AreasController.AreaReservationFetchedEventArgs e)
		{
			areaReservations = new List<AreaReservationModel>();
			areaReservations = e.AreaReservations;
			TableView.ReloadData();
		}

		void ShowAlert(string title, string message, Action func)
        {
            var okAlertController = UIAlertController.Create(title, message, UIAlertControllerStyle.Alert);

            okAlertController.AddAction(UIAlertAction.Create("Elegir otra fecha", UIAlertActionStyle.Default,(obj) => CreateDatePicker()));
            okAlertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));

            InvokeOnMainThread(() => PresentViewController(okAlertController, true, func));

        }

      
	}
}
