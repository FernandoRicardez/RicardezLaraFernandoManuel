// This file has been autogenerated from a class added in the UI designer.

using System;
using Vecinos2.Controllers;
using Foundation;
using UIKit;
using System.Collections.Generic;
using Vecinos2.Models;

namespace Vecinos2
{
	public partial class AreasTabVC : UITableViewController
	{
	      

		AreasController areasController;
		List<AreaModel> areas;
		nint numberOfAreas;
		AreaModel selectedArea;
		public AreasTabVC(IntPtr handle) : base(handle)
		{
			areasController = new AreasController();

		}

        public override void ViewWillDisappear(bool animated)
        {
            areasController.StopAreasFirebaseListener(); 
        }

        public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			
			numberOfAreas = 0;
			TableView.RowHeight = UITableView.AutomaticDimension;
			TableView.EstimatedRowHeight = 300;

            areas = new List<AreaModel>();

		}

        public override void ViewWillAppear(bool animated)
        {
            areasController.AreasFetched += AreasController_AreasFetched; ;
            areasController.getAllAreas();
        }

        public override nint NumberOfSections(UITableView tableView)
		{
			return 1;
		}

		public override nint RowsInSection(UITableView tableView, nint section)
		{
            return areas.Count;
		}

		public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
			var cell = tableView.DequeueReusableCell(AreasTableCell.Key, indexPath) as AreasTableCell;

			cell.AreaTitle = areas[indexPath.Row].Name;
			cell.AreaDescription = areas[indexPath.Row].Description;
			cell.AreaImage = new UIImage(areas[indexPath.Row].PhotoUri);
			cell.isReservable = areas[indexPath.Row].IsReservable;
			if (cell.isReservable)
				cell.ReservableLabel = "Reservable";
			else
				cell.ReservableLabel = "";


			return cell;
		}

		public override void RowSelected(UITableView tableView, NSIndexPath indexPath)
		{
			//     base.RowSelected(tableView, indexPath);
			if (areas[indexPath.Row].IsReservable)
			{
				selectedArea = areas[indexPath.Row];
				PerformSegue("ReservationSegue", this);
			}

		}

		public override void PrepareForSegue(UIStoryboardSegue segue, NSObject sender)
		{
			base.PrepareForSegue(segue, sender);
           
			if (segue.Identifier == "ReservationSegue")
			{
				var areaDetail = (AreaDetailVC)segue.DestinationViewController;
				if (areaDetail != null)
				{
					areaDetail.setArea(this, selectedArea);

				}
			}
		}

			void AreasController_AreasFetched(object sender, AreasController.AreasFetchedEventArgs e)
			{
				areas = e.AreasList;

				numberOfAreas = areas.Count;
				TableView.ReloadData();
			}

		}
	}

