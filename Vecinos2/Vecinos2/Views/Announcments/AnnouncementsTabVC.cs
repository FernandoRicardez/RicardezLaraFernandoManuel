// This file has been autogenerated from a class added in the UI designer.

using System;
using Vecinos2.Models;
using Vecinos2.Controllers;
using Foundation;
using UIKit;
using System.Collections.Generic;
using System.Globalization;

namespace Vecinos2
{
	public partial class AnnouncementsTabVC : UITableViewController
	{
        
        AnnouncmentsController announcmentsController;
        List<AnnouncementModel> announcements;

		public AnnouncementsTabVC (IntPtr handle) : base (handle)
		{
            announcmentsController = new AnnouncmentsController();
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();


            TableView.RowHeight = UITableView.AutomaticDimension;
            TableView.EstimatedRowHeight = 300;

        }

        public override void ViewWillDisappear(bool animated)
        {
            announcmentsController.StopAnnouncementFirebaseListener(); 
        }

        public override void ViewWillAppear(bool animated)
        {
            UIApplication.SharedApplication.StatusBarStyle = UIStatusBarStyle.LightContent;
            announcements = new List<AnnouncementModel>();
            announcmentsController.AnnouncementFetched += AnnouncmentsController_AnnouncementFetched;
            announcmentsController.getAllAnnouncemets();
        }

        public override nint NumberOfSections(UITableView tableView)
        {
            return 1;
        }

        public override nint RowsInSection(UITableView tableView, nint section)
        {
            return announcements.Count;
        }

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            var cell = tableView.DequeueReusableCell(AnnouncementsTableCell.Key, indexPath) as AnnouncementsTableCell;
            cell.AnnouncementTitle = announcements[indexPath.Row].Title;
            cell.AnnouncementDescription = announcements[indexPath.Row].Description;
            cell.AnnouncementDate = GetDateFormat(announcements[indexPath.Row].PostDate);
            cell.AnnouncementUser = announcements[indexPath.Row].Username;

            //GetDateFormat(announcements[indexPath.Row].ExpirationDateTimeStamp.ToString());

            return cell; 

        }

        void AnnouncmentsController_AnnouncementFetched(object sender, AnnouncmentsController.AnnouncementFetchedEventArgs e)
        {
            announcements = new List<AnnouncementModel>(); 
            announcements = e.AnnouncementList;

            TableView.ReloadData();
        }

        string GetDateFormat(string date)
        {
            
            // Use ToCharArray to convert string to array.
            char[] array = date.ToCharArray();

            string year = array[0].ToString() + array[1].ToString() + array[2].ToString() + array[3].ToString();
            string month = array[4].ToString() + array[5].ToString();
            string day = array[6].ToString() + array[7].ToString();

            string theDate = $"{year}-{month}-{day}";

            DateTime myDate = DateTime.ParseExact(theDate, "yyyy-MM-dd", new CultureInfo("es-ES"));
            var result = myDate.ToString("D", new CultureInfo("es-ES"));

            return result;

        }

    }
}
